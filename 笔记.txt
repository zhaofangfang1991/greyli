1、WSGI是Python中用来规定web服务器如何与Python Web程序进行沟通的标准
2、命令                 windows                    linux
    安装pipenv       pip install pipenv         sudo -H pip install pipenv
    创建虚拟环境     pipenv install             pipenv install
    启动虚拟环境     pipenv shell               pipenv shell
3、环境变量             配置变量
    FLASK_APP           app.config

4、用.env和.flaskenv来存储环境变量，是python-dotenv提供的功能。安装： pipenv install python-dotenv
    .flaskenv用来存储和flask相关的公开环境变量
    .env用来存储敏感信息的环境变量，如密码等
5、对比
    pipenv shell
    flask shell
    python shell
6、程序上下文和请求上下文
    程序上下文：存储了程序运行所必须的信息 current_app,g
    请求上下文：包含了请求的各种信息 request,session
    current_app:指向处理请求的当前程序实例。为了能获取对应的程序实例，而不是固定的某一个程序实例。
    g:替代python的全局变量用法，确保仅在当前请求中可用，用于存储全局数据，每次请求都会重设
    模板上下文：config request session g
7、系统配置变量，最好在创建app实例就加载配置
8、url与端点
9、wsgi是个啥玩意？
10、url中查询字符串用来向指定的资源传递参数。查询字符串从？开始，以键值对的形式写出，多个键值对之间使用&分隔
11、Flask的请求对象request，能从它获取请求报文中的所有数据
12、服务器获取客户端传来的数据方式
    request.args.get()

13、避免直接将用户传入的数据直接作为响应返回
14、在一个视图函数中，返回
    return 'hello'
    return 'hello', 200
    return '', 302, {'location': 'http://www.baidu.com'} # 重写响应首部的Location
    return jsonify(message='Error'), 500    # 这一行是返回json格式的数据
15、一般的异常在werkzeug中的exceptions中，想手动抛错误，使用abort
16、request，request.get_json()
17、认为后面会用到的功能点记录
    操作完成后，返回之前的页面继续浏览功能，next 

18、常用推送技术
    HTTP服务器推送技术
        传统轮询
        长轮询
        SSE
    全双工TCP协议
        WebSocket:实时性更强，双向通信
19、安全防范
    sql注入：
        SELECT * FROM students WHERE password = ''; drop table students;--';
        防范方法：
            1）、使用ORM
            2）、验证输入类型
            3）、参数化查询
            4）、转义特殊字符
    XSS攻击：
        用户输入JS代码，return '<h1>hello, %s</h1>' %s  -->  <h1>hello, <script>alert(1)</script></h1>
        防范方法：
            1）、HTML转义，把用户输入的所有内容标记为文本，而不是HTML代码。escape(),MarkupSafe
    CSRF攻击：
        跨站请求伪造
        防范方法：
            1）、正确使用HTTP方法
            2）、CSRF令牌校验
     使用OWASP提供的WebScarab工具来检查程序漏洞
20、装饰器
    app.context_processor装饰器，用来注册模板上下文处理函数，帮我们完成统一传入变量的工作。
    app.template_global() 注册一个模板全局函数
    app.before_request 请求钩子
    app.template_filter() 自定义过滤器
21、模板引用
    导入一个局部模板    {% include '_banner.html' %}
    宏，名字macros.html
22、使用with content传入当前模板的上下文
    {% from 'macros.html' import foo with context %}
23、使用flash时，必须设置SECRET_KEY，因为flask会将flash存在session中。
24、data-*是自定义数据属性

25、WTForms表单库，在python中使用类定义表单，使得表单的定义，服务器端的验证，处理表单数据。
    扩展Flask-WTF
26、常用的WTForms字段与HTML类型对比
    WTForms                 HTML表格
    BooleanField            input checkbox
    DateField               input text
    DateTimeField           input text
    ...
27、实例化字段类常用参数
    label render_kw validators default
28、常用的WTForms验证器
    DataRequired Email EqualTo.Length..









